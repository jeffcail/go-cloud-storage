// Code generated by goctl. DO NOT EDIT.
package types

type FileUploadChunkInput struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadChunkOut struct {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type FileUploadPrepareInput struct {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareOut struct {
	Identity string `json:"identity"`
	UploadId string `json:"uploadId"`
	Key      string `json:"key"`
}

type RefreshAuthorizationInput struct {
}

type RefreshAuthorizationOut struct {
	Id           int    `json:"id"`
	Name         string `json:"name"`
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ShareSaveInput struct {
	RepositoryIdentity string `json:"repositoryIdentity"`
	ParentId           int    `json:"parentId"`
}

type ShareSaveOut struct {
	Identity string `json:"identity"`
}

type ShareFileDetailInput struct {
	Identity string `json:"identity"`
}

type ShareFileDetailOut struct {
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
	RepositoryIdentity string `json:"repositoryIdentity"`
}

type ShareCrateInput struct {
	RepositoryIdentity string `json:"repositoryIdentity"`
	ExpiredTime        int    `json:"expiredTime"`
}

type ShareCrateOut struct {
	Identity string `json:"identity"`
}

type UserFileMoveInput struct {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parentIdentity"`
}

type UserFileMoveOut struct {
	Message string `json:"message"`
}

type UserFileDeleteInput struct {
	Identity string `json:"identity"`
}

type UserFileDeleteOut struct {
	Message string `json:"message"`
}

type UserFloderCreateInput struct {
	ParentId int    `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFloderCreateOut struct {
	Identity string `json:"identity"`
}

type UserFileNameUpdateInput struct {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateOut struct {
	Message string `json:"message"`
}

type UserFileListInput struct {
	Id       int64 `json:"id,optional"`
	Page     int   `json:"page,optional"`
	PageSize int   `json:"pageSize,optional"`
}

type UserFileListOut struct {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}

type UserFile struct {
	Id                 int64  `json:"id"`
	Name               string `json:"name"`
	Size               int64  `json:"size"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
}

type UserRepositorySaveInput struct {
	ParentId           int    `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveOut struct {
	Message string `json:"message"`
}

type FileUploadInput struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadOut struct {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRegisterInput struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterOut struct {
	Message string `json:"message"`
}

type LoginInput struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginOut struct {
	Id           int    `json:"id"`
	Name         string `json:"name"`
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type UserDetailInput struct {
	Identity string `json:"identity"`
}

type UserDetailOut struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendInput struct {
	Email string `json:"email"`
}

type MailCodeSendOut struct {
	Code string `json:"code"`
}
